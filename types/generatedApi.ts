/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/users/all": {
    get: operations["UsersController_findAll"];
  };
  "/v1/users/{loginID}": {
    get: operations["UsersController_getOneUser"];
  };
  "/v1/users": {
    get: operations["UsersController_getUsers"];
    post: operations["UsersController_postUsers"];
  };
  "/v1/auth/login": {
    post: operations["AuthController_login"];
  };
  "/v1/auth/swaggarLogin": {
    post: operations["AuthController_swaggarLogin"];
  };
  "/v1/auth/protected": {
    get: operations["AuthController_protected"];
  };
  "/v1/auth/logout": {
    post: operations["AuthController_logOut"];
  };
  "/v1/auth/github-info": {
    post: operations["AuthController_getGithubInfo"];
  };
  "/v1/auth/github-signup": {
    post: operations["AuthController_getGithubSignUp"];
  };
  "/v1/blog/image": {
    post: operations["BlogController_postImages"];
  };
  "/v1/blog": {
    post: operations["BlogController_createNewPost"];
  };
  "/v1/blog/update-post": {
    post: operations["BlogController_updatePost"];
  };
  "/v1/blog/delete-post/{postId}": {
    delete: operations["BlogController_deletePost"];
  };
  "/v1/blog/tags-info": {
    get: operations["BlogController_getAllTagsInfoListByPosition"];
  };
  "/v1/blog/tags-info/{userID}": {
    get: operations["BlogController_getTagsInfoListByUser"];
  };
  "/v1/blog/posts-info/{userID}/{tag}": {
    get: operations["BlogController_getPostsInfoList"];
  };
  "/v1/blog/post-info/{postId}": {
    get: operations["BlogController_getOnePostInfo"];
  };
  "/v1/blog/post-like/{postId}/{actionType}": {
    post: operations["BlogController_handlePostLike"];
  };
  "/v1/blog/all-posts-info": {
    get: operations["BlogController_getAllPostInfo"];
  };
  "/v1/blog/posts-info-byTag/{userID}/{tag}": {
    get: operations["BlogController_getPostInfoByTagByUser"];
  };
}

export interface components {
  schemas: {
    UserDto: {
      /**
       * @description Primary key ID
       * @example 1
       */
      id: number;
      /**
       * @description githubID
       * @example NestMaster
       */
      githubID: number;
      /**
       * @description 이메일
       * @example NestMaster@gmail.com
       */
      email: string;
      /**
       * @description 닉네임
       * @example NestMaster
       */
      nickname: string;
      /**
       * @description loginID
       * @example NestMaster
       */
      loginID: string;
      /**
       * @description blog url
       * @example http://blog.com
       */
      blog: string;
      /**
       * @description 자기소개
       * @example 웹 개발자 입니다.
       */
      bio: string;
      /** @description 프로필 사진 url */
      avatarUrl: string;
      /** @description Github url */
      githubPageUrl: string;
      /**
       * @description 개발 포지션 타입
       * @example Front-End
       * @enum {string}
       */
      positionType: "Front-End" | "Back-End" | "Full-Stack";
      /**
       * @description 로그인 type
       * @example github
       * @enum {string}
       */
      loginType: "local" | "github";
      /**
       * @description user의 권한
       * @example user
       * @enum {string}
       */
      role: "user" | "admin";
      /**
       * @description 가입 일자
       * @example 2021-05-22T10:19:06.991Z
       */
      createdAt: string;
      /**
       * @description 수정 일자
       * @example 2021-05-22T10:19:06.991Z
       */
      updatedAt: string;
      /** @description 탈퇴 일자 */
      deletedAt: string;
    };
    LocalSignUpRequestDto: {
      /**
       * @description 이메일
       * @example NestMaster@gmail.com
       */
      email: string;
      /**
       * @description loginID
       * @example NestMaster
       */
      loginID: string;
      /**
       * @description nickname
       * @example NestMaster
       */
      nickname: string;
      /**
       * @description blog url
       * @example http://blog.com
       */
      blog: string;
      /**
       * @description 자기소개
       * @example 웹 개발자 입니다.
       */
      bio: string;
      /**
       * @description 비밀번호(5~30자)
       * @example password123
       */
      password: string;
      /**
       * @description 개발 포지션 타입
       * @example Front-End
       */
      positionType: { [key: string]: unknown };
    };
    AuthLoginRequestDto: {
      /**
       * @description loginID
       * @example test4
       */
      loginID: string;
      /**
       * @description 비밀번호(5~30자)
       * @example test4
       */
      password: string;
    };
    GithubCodeDto: {
      /**
       * @description Github code
       * @example random token code string
       */
      code: string;
    };
    GithubUserInfoDTO: { [key: string]: unknown };
    GithubSignUpDto: {
      /**
       * @description github User Data Type
       * @example github User data
       */
      githubUserInfo: components["schemas"]["GithubUserInfoDTO"];
      /**
       * @description 개발자 포지션 타입
       * @example Front-End
       * @enum {string}
       */
      positionType: "Front-End" | "Back-End" | "Full-Stack";
    };
    CreateBlogPostDto: { [key: string]: unknown };
    UpdateBlogPostDto: { [key: string]: unknown };
    BlogPostsLike: { [key: string]: unknown };
    BlogPosts: {
      id: number;
      title: string;
      Tags: string[];
      content: string;
      thumbnail: string;
      UserId: number;
      User: { [key: string]: unknown };
      LikeDisLike: components["schemas"]["BlogPostsLike"];
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      /** Format: date-time */
      deletedAt: string;
    };
  };
}

export interface operations {
  UsersController_findAll: {
    parameters: {
      query: {
        /** 불러올 페이지 */
        page: string;
        /** 한번에 가져오는 개수 */
        perPage: string;
      };
    };
    responses: {
      /** 성공 */
      200: {
        content: {
          "application/json": components["schemas"]["UserDto"][];
        };
      };
    };
  };
  UsersController_getOneUser: {
    parameters: {
      path: {
        /** 찾을 사용자 아이디 */
        loginID: string;
      };
    };
    responses: {
      /** 해당 유저가 존재하지 않습니다 */
      404: unknown;
    };
  };
  UsersController_getUsers: {
    parameters: {};
    responses: {
      /** 성공 */
      200: {
        content: {
          "application/json": components["schemas"]["UserDto"];
        };
      };
      /** 서버 에러 */
      500: unknown;
    };
  };
  UsersController_postUsers: {
    parameters: {};
    responses: {
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LocalSignUpRequestDto"];
      };
    };
  };
  AuthController_login: {
    parameters: {};
    responses: {
      /** login 성공 */
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthLoginRequestDto"];
      };
    };
  };
  AuthController_swaggarLogin: {
    parameters: {};
    responses: {
      /** login 성공 */
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthLoginRequestDto"];
      };
    };
  };
  AuthController_protected: {
    parameters: {};
    responses: {
      200: unknown;
    };
  };
  AuthController_logOut: {
    parameters: {};
    responses: {
      /** logout 성공 */
      201: unknown;
    };
  };
  AuthController_getGithubInfo: {
    parameters: {};
    responses: {
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GithubCodeDto"];
      };
    };
  };
  AuthController_getGithubSignUp: {
    parameters: {};
    responses: {
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GithubSignUpDto"];
      };
    };
  };
  BlogController_postImages: {
    parameters: {};
    responses: {
      201: unknown;
    };
  };
  BlogController_createNewPost: {
    parameters: {};
    responses: {
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateBlogPostDto"];
      };
    };
  };
  BlogController_updatePost: {
    parameters: {};
    responses: {
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateBlogPostDto"];
      };
    };
  };
  BlogController_deletePost: {
    parameters: {
      path: {
        postId: string;
      };
    };
    responses: {
      200: unknown;
    };
  };
  BlogController_getAllTagsInfoListByPosition: {
    parameters: {};
    responses: {
      200: unknown;
    };
  };
  BlogController_getTagsInfoListByUser: {
    parameters: {
      path: {
        userID: string;
      };
    };
    responses: {
      200: unknown;
    };
  };
  BlogController_getPostsInfoList: {
    parameters: {
      path: {
        userID: string;
        tag: string;
      };
    };
    responses: {
      200: unknown;
    };
  };
  BlogController_getOnePostInfo: {
    parameters: {
      path: {
        postId: string;
      };
    };
    responses: {
      /** 성공 */
      200: {
        content: {
          "application/json": components["schemas"]["BlogPosts"];
        };
      };
    };
  };
  BlogController_handlePostLike: {
    parameters: {
      path: {
        postId: string;
      };
    };
    responses: {
      201: unknown;
    };
  };
  BlogController_getAllPostInfo: {
    parameters: {};
    responses: {
      200: unknown;
    };
  };
  BlogController_getPostInfoByTagByUser: {
    parameters: {
      path: {
        userID: string;
        tag: string;
      };
    };
    responses: {
      200: unknown;
    };
  };
}

export interface external {}
